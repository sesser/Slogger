<?php

namespace Sesser\Slogger\Providers;
/**
 * Test class for File.
 * Generated by PHPUnit on 2012-06-28 at 17:27:48.
 * @ignore
 */
class FileTest extends \PHPUnit_Framework_TestCase
{

	/**
	 * @var File
	 */
	protected $object;
	protected $file;
	protected $config;

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp()
	{
		$this->file = dirname(dirname(__FILE__)) . DIRECTORY_SEPARATOR . basename(__FILE__) . '.log';
		$this->config = array(
			'enabled' => true,
			'level'		=> \Sesser\Slogger\Slogger::LOG_LEVEL_DEBUG,
			'logfile'	=> $this->file
		);
		$this->object = File::GetLogger('default', $this->config);
	}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 */
	protected function tearDown()
	{
		unlink($this->file);
	}

	/**
	 * @covers Sesser\Slogger\Providers\File::GetLogger
	 * @todo Implement testGetLogger().
	 */
	public function testGetLogger()
	{
		$this->assertInstanceOf(__NAMESPACE__ . '\File', $this->object);
		$this->assertInstanceOf('Sesser\Slogger\ISlogger', $this->object);
	}

	/**
	 * @covers Sesser\Slogger\Providers\File::Debug
	 * @todo Implement testDebug().
	 */
	public function testDebug()
	{
		$this->object->Debug("Test");
		$contents = file_get_contents($this->file);
		$this->assertContains('Test', $contents);
		$this->assertContains('DEBUG', $contents);
	}

	/**
	 * @covers Sesser\Slogger\Providers\File::Error
	 * @todo Implement testError().
	 */
	public function testError()
	{
		$this->object->Error("Test");
		$contents = file_get_contents($this->file);
		$this->assertContains('Test', $contents);
		$this->assertContains('ERROR', $contents);
	}

	/**
	 * @covers Sesser\Slogger\Providers\File::Info
	 * @todo Implement testInfo().
	 */
	public function testInfo()
	{
		$this->object->Info("Test");
		$contents = file_get_contents($this->file);
		$this->assertContains('Test', $contents);
		$this->assertContains('INFO', $contents);
	}

	/**
	 * @covers Sesser\Slogger\Providers\File::Warn
	 * @todo Implement testWarn().
	 */
	public function testWarn()
	{
		$this->object->Warn("Test");
		$contents = file_get_contents($this->file);
		$this->assertContains('Test', $contents);
		$this->assertContains('WARN', $contents);
	}
	
	public function testSerializer()
	{
		$this->config['serializer'] = function($message) {
			return "Serialized!";
		};
		$log = File::GetLogger('test_ser', $this->config);
		$log->Debug($this);
		$contents = file_get_contents($this->file);
		$this->assertContains('Serialized!', $contents);
	}
	
	public function testNoSerializer()
	{
		$this->object->Debug(array());
		$contents = file_get_contents($this->file);
		$this->assertContains('Array', $contents);
	}
	
	/**
	 * @expectedException \Sesser\Slogger\SloggerException 
	 */
	public function testCantCreateFile()
	{
		$this->config['logfile'] = '/var/log/test.log';
		$log = File::GetLogger('nolog', $this->config);
	}
	
	/**
	 * @expectedException \Sesser\Slogger\SloggerException
	 */
	public function testCantCreateDirectory()
	{
		$this->config['logfile'] = '/var/log/testfile/testlog.log';
		$log = File::GetLogger('nodir', $this->config);
	}
	
	public function testLogException()
	{
		$this->object->Error(new \Exception("Test"));
		$contents = file_get_contents($this->file);
		$this->assertContains('EXCEPTION', $contents);
		$this->assertContains('Test', $contents);
	}

}
